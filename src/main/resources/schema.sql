CREATE TABLE IF NOT EXISTS users (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
	email VARCHAR NOT NULL,
	login VARCHAR NOT NULL UNIQUE,
	name VARCHAR NOT NULL,
	birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa_ratings (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
	rating VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS genres (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
	name VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS films (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
	name VARCHAR NOT NULL,
	description VARCHAR(200) NOT NULL,
	release_date DATE NOT NULL,
	duration INTEGER NOT NULL CHECK (duration > 0),
	mpa_rating_id INTEGER NOT NULL,
	FOREIGN KEY (mpa_rating_id) REFERENCES mpa_ratings(id)
);

CREATE TABLE IF NOT EXISTS films_genres (
	film_id INTEGER NOT NULL,
	genre_id INTEGER NOT NULL,
	FOREIGN KEY (film_id) REFERENCES films(id),
	FOREIGN KEY (genre_id) REFERENCES genres(id),
	PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS likes (
	user_id INTEGER NOT NULL,
	film_id INTEGER NOT NULL,
	FOREIGN KEY (user_id) REFERENCES users(id),
	FOREIGN KEY (film_id) REFERENCES films(id),
	PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS friends (
	user_id INTEGER NOT NULL,
	friend_id INTEGER NOT NULL,
	FOREIGN KEY (user_id) REFERENCES users(id),
	FOREIGN KEY (friend_id) REFERENCES users(id),
	PRIMARY KEY (user_id, friend_id)
);