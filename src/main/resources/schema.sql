CREATE TABLE IF NOT EXISTS users (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
	email VARCHAR NOT NULL,
	login VARCHAR NOT NULL UNIQUE,
	name VARCHAR NOT NULL,
	birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
	name VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS genres (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
	name VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS films (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
	name VARCHAR NOT NULL,
	description VARCHAR(200) NOT NULL,
	release_date DATE NOT NULL,
	duration INTEGER NOT NULL CHECK (duration > 0),
	mpa_id INTEGER NOT NULL,
	FOREIGN KEY (mpa_id) REFERENCES mpa(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS films_genres (
	film_id INTEGER NOT NULL,
	genre_id INTEGER NOT NULL,
	FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
	FOREIGN KEY (genre_id) REFERENCES genres(id) ON DELETE CASCADE,
	PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS likes (
	user_id INTEGER NOT NULL,
	film_id INTEGER NOT NULL,
	FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
	FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
	PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS friends (
	user_id INTEGER NOT NULL,
	friend_id INTEGER NOT NULL,
	FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
	FOREIGN KEY (friend_id) REFERENCES users(id) ON DELETE CASCADE,
	PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS reviews (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    content VARCHAR(500) NOT NULL,
    positive BOOLEAN NOT NULL,
    user_id INTEGER NOT NULL,
    film_id INTEGER NOT NULL,
    useful INTEGER NOT NULL DEFAULT 0,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS review_likes (
    user_id INTEGER NOT NULL,
    review_id INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (review_id) REFERENCES reviews(id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, review_id)
);

CREATE TABLE IF NOT EXISTS review_dislikes (
    user_id INTEGER NOT NULL,
    review_id INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (review_id) REFERENCES reviews(id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, review_id)
);
